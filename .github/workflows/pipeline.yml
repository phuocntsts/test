name: Github Action Pipeline

on:
  push:
    branches: ["main", "staging"]
env:
  test_env: |
    run
jobs:
  pre-build:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}
    steps:
      - id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "::set-output name=env_name::PRODUCTION"
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            echo "::set-output name=env_name::STAGING"
          else
            echo "::set-output name=env_name::DEV"
          fi
  Deploy:
    needs: [pre-build]
    runs-on: ubuntu-latest
    environment: ${{needs.pre-build.outputs.env_name}}
    steps:
      - uses: actions/checkout@v3
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(vars) }}
        run: |
          echo "$RUNNER_CONTEXT" > test2.json
          cat test2.json
      - name: Dump GitHub context
        run:  echo '${{ toJson(vars) }}' > test.json
      - name: print test.json
        run: cat test.json
      - name: conver to key-value
        run: jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' test2.json > .env.staging
      - run: |
          mkdir test
          mv .env.staging test/.
          cat test/.env.staging

      #- uses: jakejarvis/s3-sync-action@master
      #  with:
      #    args: --delete
      #  env:
      #    AWS_S3_BUCKET: 'batongapp-dev.com'
      #    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #    SOURCE_DIR: 'test'

